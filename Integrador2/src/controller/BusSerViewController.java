package controller;

import java.net.URL;
import java.util.LinkedList;
import java.util.ResourceBundle;
import datos.BaseDatos;
import datos.Entrenador;
import datos.Servicio;
import datos.Venta;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;
import load.LoadMenuEntView;

public class BusSerViewController implements Initializable{

	@FXML
    private Button BtnBack;

    @FXML
    private Button BtnBus;

    @FXML
    private TableColumn<Servicio, String> ColEnt;

    @FXML
    private TableColumn<Servicio, String> ColFec;

    @FXML
    private TableColumn<Servicio, Integer> ColHora;

    @FXML
    private TableColumn<Servicio, String> ColHorar;

    @FXML
    private TableColumn<Servicio, String> ColId;

    @FXML
    private TextField TxtBus;

    @FXML
    private BorderPane Vista;

    @FXML
    private StackPane productsContent;

    @FXML
    private TableView<Servicio> tableBuscar;

    @FXML
    private Label txtError;

	
	private LoadMenuEntView lmvv;
	
	private BaseDatos dataprovider;
	
	private ObservableList<Servicio> data = FXCollections.observableArrayList();
	/**
     * Método llamado cuando se hace clic en el botón de búsqueda.
     * Realiza una búsqueda de servicios en la base de datos según el término ingresado en el campo TxtBus.
     * Muestra los resultados en la tabla tableBuscar y muestra un mensaje de error si la búsqueda no devuelve resultados.
     *
     * @param event El evento de acción del botón.
     */
	@FXML
	public void btnBUsOnAction(ActionEvent event) {
		BaseDatos dataprovider = new BaseDatos(); 
	    LinkedList<Servicio> data2 = dataprovider.getSer2(TxtBus.getText());
	    if (!data2.isEmpty()) {
	        this.ColId.setCellValueFactory(new PropertyValueFactory<Servicio, String>("id"));
	        this.ColFec.setCellValueFactory(new PropertyValueFactory<Servicio, String>("fecha"));
	        this.ColHorar.setCellValueFactory(new PropertyValueFactory<Servicio, String>("horario"));
	        this.ColHora.setCellValueFactory(new PropertyValueFactory<Servicio, Integer>("horas"));
	        this.ColEnt.setCellValueFactory(new PropertyValueFactory<Servicio, String>("nombre"));
	        ObservableList<Servicio> ventaObservableList = FXCollections.observableArrayList(data2);
	        tableBuscar.setItems(ventaObservableList);
	        txtError.setText("");
	    } else {
	        txtError.setText("Error en la busqueda");
	    }
	}
	/**
     * Método llamado cuando se hace clic en el botón de retroceso.
     * Crea una nueva instancia de LoadMenuEntView para cargar la vista del menú de entrenador.
     *
     * @param event El evento de clic del mouse.
     */
	public void onBackClicked(MouseEvent event) {
		// TODO Autogenerated
		lmvv = new LoadMenuEntView((Stage)this.BtnBack.getScene().getWindow());
	}
	/**
     * Método para cargar los datos de los servicios desde la base de datos y establecerlos en la tabla.
     */
	public void cargar() {
	    LinkedList<Servicio> data3 = dataprovider.getSer();
	    data.setAll(data3);
	}
	/**
     * Método para inicializar el controlador.
     * Crea una instancia de BaseDatos y establece las celdas de la tabla tableBuscar con los valores correspondientes.
     * Llama al método cargar() para cargar los datos de los servicios en la tabla.
     *
     * @param arg0 URL
     * @param arg1 ResourceBundle
     */
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		this.dataprovider = new BaseDatos();
		this.ColId.setCellValueFactory(new PropertyValueFactory<Servicio, String>("id"));
        this.ColFec.setCellValueFactory(new PropertyValueFactory<Servicio, String>("fecha"));
        this.ColHorar.setCellValueFactory(new PropertyValueFactory<Servicio, String>("horario"));
        this.ColHora.setCellValueFactory(new PropertyValueFactory<Servicio, Integer>("horas"));
        this.ColEnt.setCellValueFactory(new PropertyValueFactory<Servicio, String>("nombre"));
		tableBuscar.setItems(this.data);
		cargar();
	}
}
