package controller;

import java.net.URL;
import java.util.LinkedList;
import java.util.ResourceBundle;

import datos.BaseDatos;
import datos.Producto;
import datos.Vendedor;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import load.LoadMenuVentaView;
import javafx.scene.control.Label;

import javafx.scene.control.ComboBox;

public class AddVentasViewController implements Initializable {
	@FXML
	private TextField TxtCantidad;
	@FXML
	private TextField TxtFecha;
	@FXML
	private TextField txtCodigo;
	@FXML
	private Button BtnCrear;
	@FXML
	private Label TxtError;
	@FXML
	private ComboBox<String> Boxprod;
	@FXML
	private ComboBox<String> BoxVend;
	@FXML
	private Button BtnBack;
	
	private LoadMenuVentaView lmvv;
	
	private BaseDatos dataprovider = new BaseDatos();
	
	
	private ObservableList<Producto> data  = FXCollections.observableArrayList();
	private ObservableList<Vendedor> data1  = FXCollections.observableArrayList();
	/**
     * Método para obtener la lista de productos desde la base de datos.
     */
	public void getProd() {
	    LinkedList<Producto> data1 = dataprovider.getProd(); 
	    data.setAll(data1);
	}
	/**
     * Método para obtener la lista de vendedores desde la base de datos.
     */
	public void getVend() {
	    LinkedList<Vendedor> data2 = dataprovider.getVend(); 
	    data1.setAll(data2);
	}
	/**
     * Método para llenar el ComboBox con los nombres de los productos.
     */
	public void llenarComboBoxProd() {
	    LinkedList<Producto> listaProductos = dataprovider.getProd();
	    Boxprod.getItems().clear();
	    for (Producto producto : listaProductos) {
	    	Boxprod.getItems().add(producto.getNombre());
	    }
	}
	/**
     * Método para llenar el ComboBox con los nombres de los vendedores.
     */
	public void llenarComboBoxVend() {
	    LinkedList<Vendedor> listaVendedor = dataprovider.getVend();
	    BoxVend.getItems().clear();
	    for (Vendedor producto : listaVendedor) {
	    	BoxVend.getItems().add(producto.getNombre());
	    }
	}
	/**
     * Método llamado cuando se hace clic en el botón de retroceso.
     * Crea una nueva instancia de LoadMenuVentaView para cargar la vista del menú de venta.
     *
     * @param event El evento de clic del mouse.
     */
	public void onBackClicked(MouseEvent event) {
		// TODO Autogenerated
		lmvv = new LoadMenuVentaView((Stage)this.BtnBack.getScene().getWindow());
	}
	/**
     * Método llamado cuando se hace clic en el botón de crear.
     * Obtiene los datos de la nueva venta de los campos de entrada y llama al método guardarVenta del proveedor de datos.
     * Muestra un mensaje de éxito o error en la etiqueta TxtError.
     *
     * @param event El evento de clic del mouse.
     */
	public void onCrearClicked(MouseEvent event) {
		String nombreProducto = Boxprod.getValue();
        String nombreVendedor = BoxVend.getValue();
        int cantidad = Integer.parseInt(TxtCantidad.getText());
        String fecha = TxtFecha.getText();
        String id = txtCodigo.getText();
        String idProducto = dataprovider.buscarIdProductoPorNombre(nombreProducto);
        String cedVendedor = dataprovider.buscarIdVendedorPorNombre(nombreVendedor);
        boolean exito = dataprovider.guardarVenta(idProducto, cedVendedor, cantidad, fecha, id);
        if (exito) {
        	TxtError.setText("Completado");
        } 
        else {
        	TxtError.setText("Error en guardar");
        }
	}
	/**
     * Método para inicializar el controlador.
     * Llama a los métodos getProd(), getVend(), llenarComboBoxProd() y llenarComboBoxVend() para obtener las listas de productos y vendedores y llenar los ComboBox.
     *
     * @param arg0 URL
     * @param arg1 ResourceBundle
     */
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		getProd();
		getVend();
		llenarComboBoxProd();
		llenarComboBoxVend();
		
	}

}
