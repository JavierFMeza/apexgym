package controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;

import java.net.URL;
import java.util.LinkedList;
import java.util.ResourceBundle;
import datos.BaseDatos;
import datos.Venta;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;
import load.LoadMenuVentaView;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;

public class BusVentaViewController implements Initializable{
	
	@FXML
    private TableColumn<Venta, Integer> ColCan;

    @FXML
    private TableColumn<Venta, String> ColId;

    @FXML
    private TableColumn<Venta, String> ColFec;

    @FXML
    private TableColumn<Venta, String> ColNom;

    @FXML
    private TableColumn<Venta, Integer> ColPre;

    @FXML
    private TableColumn<Venta, String> ColVen;
    
    @FXML
    private TableView<Venta> tableBuscar;
    
	@FXML
	private StackPane productsContent;
	
	@FXML
	private TextField fieldProductsSearch;

	private BaseDatos dataprovider;
	
	@FXML
	private Button BtnBus;
	
	@FXML
	private Button BtnBack;
	
	@FXML
	private Label txtError;
	
	private LoadMenuVentaView lmvv;
	
	@FXML
    private TextField TxtBus;
	
	private ObservableList<Venta> data = FXCollections.observableArrayList();

	/**
     * Método llamado cuando se hace clic en el botón de búsqueda.
     * Busca ventas según el término ingresado en el campo de búsqueda y las muestra en la tabla.
     *
     * @param event El evento de clic del mouse.
     */
	@FXML
	public void btnBUsOnAction(MouseEvent event) {
	    BaseDatos dataprovider = new BaseDatos(); 
	    LinkedList<Venta> data2 = dataprovider.getVenta2(TxtBus.getText());
	    if (!data2.isEmpty()) {
	        this.ColCan.setCellValueFactory(new PropertyValueFactory<Venta, Integer>("cantidad"));
	        this.ColId.setCellValueFactory(new PropertyValueFactory<Venta, String>("id"));
	        this.ColFec.setCellValueFactory(new PropertyValueFactory<Venta, String>("fecha"));
	        this.ColNom.setCellValueFactory(new PropertyValueFactory<Venta, String>("nombre"));
	        this.ColPre.setCellValueFactory(new PropertyValueFactory<Venta, Integer>("precio"));
	        this.ColVen.setCellValueFactory(new PropertyValueFactory<Venta, String>("nombre"));
	        ObservableList<Venta> ventaObservableList = FXCollections.observableArrayList(data2);
	        tableBuscar.setItems(ventaObservableList);
	        txtError.setText("");
	    } else {
	        txtError.setText("Error en la busqueda");
	    }
	}
	/**
     * Método llamado cuando se hace clic en el botón de retroceso.
     * Crea una nueva instancia de LoadMenuVentaView para cargar la vista del menú de venta.
     *
     * @param event El evento de clic del mouse.
     */
	public void onBackClicked(MouseEvent event) {
		// TODO Autogenerated
		lmvv = new LoadMenuVentaView((Stage)this.BtnBack.getScene().getWindow());
	}
	
	/**
     * Carga las ventas desde la base de datos y las muestra en la tabla al inicializar el controlador.
     */
	public void cargar() {
	    LinkedList<Venta> data2 = dataprovider.getVenta();
	    data.setAll(data2);
	}
	/**
     * Método de inicialización del controlador.
     * Configura las celdas de la tabla y carga las ventas al iniciar la vista.
     *
     * @param arg0 URL de inicialización
     * @param arg1 ResourceBundle de inicialización
     */
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
				this.dataprovider = new BaseDatos();
				this.ColCan.setCellValueFactory(new PropertyValueFactory<Venta, Integer>("cantidad"));
				this.ColId.setCellValueFactory(new PropertyValueFactory<Venta, String>("id"));
				this.ColFec.setCellValueFactory(new PropertyValueFactory<Venta, String>("fecha"));
				this.ColNom.setCellValueFactory(new PropertyValueFactory<Venta, String>("nombre"));
				this.ColPre.setCellValueFactory(new PropertyValueFactory<Venta, Integer>("precio"));
				this.ColVen.setCellValueFactory(new PropertyValueFactory<Venta, String>("nombre"));
				tableBuscar.setItems(this.data);
				cargar();
	}
}
